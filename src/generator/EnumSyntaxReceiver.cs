using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;

namespace InfiniteEnumFlags.Generator;

internal class EnumSyntaxReceiver : ISyntaxReceiver
{
    internal List<Source> Sources { get; } = new();

    public void OnVisitSyntaxNode(SyntaxNode syntaxNode)
    {
        if (syntaxNode is EnumDeclarationSyntax enumDeclarationSyntax)
        // enumDeclarationSyntax.AttributeLists.Any(q => q.ToString() == "InfiniteFlags" ||
        //                                               q.ToString() == "InfiniteFlagsAttribute"))
        {
            var code = GenerateSource(enumDeclarationSyntax);
            var fileName = enumDeclarationSyntax.Identifier.ToString();
            Sources.Add(new Source(fileName, code));
        }
    }

    private string GenerateSource(EnumDeclarationSyntax target)
    {
        var source = new StringBuilder();
        source.AppendLine("// <auto-generated/>");
        source.AppendLine($"using InfiniteEnumFlags;");
        var @namespace = target.GetNamespace();
        if (@namespace is not null)
            source.AppendLine($"namespace {@namespace};");
        var cleanTarget = GenerateClassMembers(target);
        source.AppendLine(cleanTarget.ToString());
        return source.ToString();
    }

    private ClassDeclarationSyntax GenerateClassMembers(EnumDeclarationSyntax target)
    {
        return ClassDeclaration("Features")
            .WithModifiers(
                TokenList(
                    Token(SyntaxKind.PublicKeyword)))
            .WithMembers(
                List<MemberDeclarationSyntax>(
                    new MemberDeclarationSyntax[]
                    {
                        FieldDeclaration(
                                VariableDeclaration(
                                        PredefinedType(
                                            Token(SyntaxKind.IntKeyword)))
                                    .WithVariables(
                                        SingletonSeparatedList<VariableDeclaratorSyntax>(
                                            VariableDeclarator(
                                                    Identifier("TOTAL_ITEMS"))
                                                .WithInitializer(
                                                    EqualsValueClause(
                                                        LiteralExpression(
                                                            SyntaxKind.NumericLiteralExpression,
                                                            Literal(3)))))))
                            .WithModifiers(
                                TokenList(
                                    new[]
                                    {
                                        Token(SyntaxKind.PublicKeyword),
                                        Token(SyntaxKind.ConstKeyword)
                                    })),
                        FieldDeclaration(
                                VariableDeclaration(
                                        IdentifierName("EnumItem"))
                                    .WithVariables(
                                        SingletonSeparatedList<VariableDeclaratorSyntax>(
                                            VariableDeclarator(
                                                    Identifier("None"))
                                                .WithInitializer(
                                                    EqualsValueClause(
                                                        ImplicitObjectCreationExpression()
                                                            .WithArgumentList(
                                                                ArgumentList(
                                                                    SeparatedList<ArgumentSyntax>(
                                                                        new SyntaxNodeOrToken[]
                                                                        {
                                                                            Argument(
                                                                                LiteralExpression(
                                                                                    SyntaxKind
                                                                                        .NumericLiteralExpression,
                                                                                    Literal(0))),
                                                                            Token(SyntaxKind.CommaToken),
                                                                            Argument(
                                                                                IdentifierName(
                                                                                    "TOTAL_ITEMS"))
                                                                        }))))))))
                            .WithModifiers(
                                TokenList(
                                    new[]
                                    {
                                        Token(SyntaxKind.PublicKeyword),
                                        Token(SyntaxKind.StaticKeyword),
                                        Token(SyntaxKind.ReadOnlyKeyword)
                                    })),
                        FieldDeclaration(
                                VariableDeclaration(
                                        IdentifierName("EnumItem"))
                                    .WithVariables(
                                        SingletonSeparatedList<VariableDeclaratorSyntax>(
                                            VariableDeclarator(
                                                    Identifier("All"))
                                                .WithInitializer(
                                                    EqualsValueClause(
                                                        PrefixUnaryExpression(
                                                            SyntaxKind.BitwiseNotExpression,
                                                            IdentifierName("None")))))))
                            .WithModifiers(
                                TokenList(
                                    new[]
                                    {
                                        Token(SyntaxKind.PublicKeyword),
                                        Token(SyntaxKind.StaticKeyword),
                                        Token(SyntaxKind.ReadOnlyKeyword)
                                    })),
                        FieldDeclaration(
                                VariableDeclaration(
                                        IdentifierName("EnumItem"))
                                    .WithVariables(
                                        SingletonSeparatedList<VariableDeclaratorSyntax>(
                                            VariableDeclarator(
                                                    Identifier("F1"))
                                                .WithInitializer(
                                                    EqualsValueClause(
                                                        ImplicitObjectCreationExpression()
                                                            .WithArgumentList(
                                                                ArgumentList(
                                                                    SeparatedList<ArgumentSyntax>(
                                                                        new SyntaxNodeOrToken[]
                                                                        {
                                                                            Argument(
                                                                                LiteralExpression(
                                                                                    SyntaxKind
                                                                                        .NumericLiteralExpression,
                                                                                    Literal(1))),
                                                                            Token(SyntaxKind.CommaToken),
                                                                            Argument(
                                                                                IdentifierName(
                                                                                    "TOTAL_ITEMS"))
                                                                        }))))))))
                            .WithModifiers(
                                TokenList(
                                    new[]
                                    {
                                        Token(SyntaxKind.PublicKeyword),
                                        Token(SyntaxKind.StaticKeyword),
                                        Token(SyntaxKind.ReadOnlyKeyword)
                                    })),
                        FieldDeclaration(
                                VariableDeclaration(
                                        IdentifierName("EnumItem"))
                                    .WithVariables(
                                        SingletonSeparatedList<VariableDeclaratorSyntax>(
                                            VariableDeclarator(
                                                    Identifier("F2"))
                                                .WithInitializer(
                                                    EqualsValueClause(
                                                        ImplicitObjectCreationExpression()
                                                            .WithArgumentList(
                                                                ArgumentList(
                                                                    SeparatedList<ArgumentSyntax>(
                                                                        new SyntaxNodeOrToken[]
                                                                        {
                                                                            Argument(
                                                                                LiteralExpression(
                                                                                    SyntaxKind
                                                                                        .NumericLiteralExpression,
                                                                                    Literal(2))),
                                                                            Token(SyntaxKind.CommaToken),
                                                                            Argument(
                                                                                IdentifierName(
                                                                                    "TOTAL_ITEMS"))
                                                                        }))))))))
                            .WithModifiers(
                                TokenList(
                                    new[]
                                    {
                                        Token(SyntaxKind.PublicKeyword),
                                        Token(SyntaxKind.StaticKeyword),
                                        Token(SyntaxKind.ReadOnlyKeyword)
                                    })),
                        FieldDeclaration(
                                VariableDeclaration(
                                        IdentifierName("EnumItem"))
                                    .WithVariables(
                                        SingletonSeparatedList<VariableDeclaratorSyntax>(
                                            VariableDeclarator(
                                                    Identifier("F3"))
                                                .WithInitializer(
                                                    EqualsValueClause(
                                                        ImplicitObjectCreationExpression()
                                                            .WithArgumentList(
                                                                ArgumentList(
                                                                    SeparatedList<ArgumentSyntax>(
                                                                        new SyntaxNodeOrToken[]
                                                                        {
                                                                            Argument(
                                                                                LiteralExpression(
                                                                                    SyntaxKind
                                                                                        .NumericLiteralExpression,
                                                                                    Literal(3))),
                                                                            Token(SyntaxKind.CommaToken),
                                                                            Argument(
                                                                                IdentifierName(
                                                                                    "TOTAL_ITEMS"))
                                                                        }))))))))
                            .WithModifiers(
                                TokenList(
                                    new[]
                                    {
                                        Token(SyntaxKind.PublicKeyword),
                                        Token(SyntaxKind.StaticKeyword),
                                        Token(SyntaxKind.ReadOnlyKeyword)
                                    }))
                    }))
            .NormalizeWhitespace();
    }
}